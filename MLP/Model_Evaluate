for col in prd[1:]:
    train_loader = build_dataloader(data_dir, prd, 'train', col)
    test_loader = build_dataloader(data_dir, prd, 'test', col)

    # 모델 초기화
    model = NeuralNetwork(input_size).to(DEVICE)
    optimizer = optim.SGD(model.parameters(), lr=0.01)

    # 모델 훈련
    train_losses = []
    for epoch in range(num_epochs):
        train_loss = train_one_epoch(train_loader, model, optimizer, criterion, DEVICE)
        train_losses.append(train_loss)

    # 모델 평가
    model.eval()
    with torch.no_grad():
        test_loss = 0.0
        for inputs, targets in test_loader:
            inputs, targets = inputs.to(DEVICE), targets.to(DEVICE)
            outputs = model(inputs)
            loss = criterion(outputs, targets)
            test_loss += loss.item() * inputs.size(0)

        test_loss /= len(test_loader.dataset)
        print(f'Test Loss: {test_loss:.4f}')
