def Train_Naive(df):
  actual = df['y'].iloc[1:]  # 첫 번째 행은 Naive 예측값이 없으므로 제외
  predicted = df['Naive_Forecast'].iloc[1:]

  last_train_value['y'] = df['y'].iloc[-1]
  return actual, predicted, last_train_value

def Test_Naive(df, last_train_value):
  df.loc[df.index[0], 'Naive_Forecast'] = last_train_value['y']
  actual = df['y']
  predicted = df['Naive_Forecast']

  return actual, predicted

data_dir = '/content/drive/MyDrive/predic_price'
prd = ['date', '배추', '무', '마늘', '양파', '대파', '시금치', '깻잎']

last_train_value = {}
for phase in ['train', 'test']:
  print(phase)
  df = predict_dataset(data_dir = data_dir, phase = phase, prd = prd)
  df = df.get_list()

  for col in prd[1:]:
    each_df = Naive_Process(df, col)
    if phase == 'train':
      actual, predicted, last_train_value = Train_Naive(each_df)
      evaluate_model(actual, predicted)
    else:
      actual, predicted = Test_Naive(each_df,last_train_value)
      evaluate_model(actual, predicted)
